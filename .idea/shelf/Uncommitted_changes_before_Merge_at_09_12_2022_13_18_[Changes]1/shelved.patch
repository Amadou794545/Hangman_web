Index: hangman-web/handlers.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"html/template\"\r\n\t\"net/http\"\r\n)\r\n\r\n//func Home(w http.ResponseWriter, r *http.Request) {\r\n//\tRenderTemplate(w, \"home\")\r\n//}\r\n\r\nfunc Contact(w http.ResponseWriter, r *http.Request) {\r\n\tRenderTemplate(w, \"contact\")\r\n}\r\n\r\nfunc RenderTemplate(w http.ResponseWriter, tmpl string) {\r\n\tt, err := template.ParseFiles(\"./Templates/\" + tmpl + \".html\")\r\n\tif err != nil {\r\n\t\thttp.Error(w, err.Error(), http.StatusInternalServerError)\r\n\t\treturn\r\n\t}\r\n\tt.Execute(w, nil)\r\n}\r\n\r\nfunc Home(w http.ResponseWriter, r *http.Request) {\r\n\tRenderTemplate(w, \"home\")\r\n\tif r.URL.Path != \"/\" {\r\n\t\thttp.Error(w, \"404 not found.\", http.StatusNotFound)\r\n\t\treturn\r\n\t}\r\n\tswitch r.Method {\r\n\tcase \"POST\":\r\n\t\t// Call ParseForm() to parse the raw query and update r.PostForm and r.Form.\r\n\t\tif err := r.ParseForm(); err != nil {\r\n\t\t\tfmt.Fprintf(w, \"ParseForm() err: %v\", err)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tfmt.Fprintf(w, \"Post from website! r.PostFrom = %v\\n\", r.PostForm)\r\n\t\tname := r.FormValue(\"name\")\r\n\t\taddress := r.FormValue(\"address\")\r\n\t\tfmt.Fprintf(w, \"Name = %s\\n\", name)\r\n\t\tfmt.Fprintf(w, \"Address = %s\\n\", address)\r\n\tdefault:\r\n\t\tfmt.Fprintf(w, \"Sorry, only GET and POST methods are supported.\")\r\n\t}\r\n}\r\n\r\nfunc Jouer(w http.ResponseWriter, r *http.Request) {\r\n\tRenderTemplate(w, \"jouer\")\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hangman-web/handlers.go b/hangman-web/handlers.go
--- a/hangman-web/handlers.go	(revision f0c69eceb290a93862d10d7982b76fac1913fb13)
+++ b/hangman-web/handlers.go	(date 1670588299941)
@@ -6,46 +6,25 @@
 	"net/http"
 )
 
-//func Home(w http.ResponseWriter, r *http.Request) {
-//	RenderTemplate(w, "home")
-//}
+var templates, _ = template.ParseFiles("Templates/home.html", "Templates/contact.html", "Templates/jouer.html")
 
 func Contact(w http.ResponseWriter, r *http.Request) {
-	RenderTemplate(w, "contact")
 }
+
+func Home(w http.ResponseWriter, r *http.Request) {
+	type Page struct {
+		Name    string
+		Address string
+	}
 
-func RenderTemplate(w http.ResponseWriter, tmpl string) {
-	t, err := template.ParseFiles("./Templates/" + tmpl + ".html")
+	err := templates.ExecuteTemplate(w, "home.html", Page{"Wallace", "BOOM"})
 	if err != nil {
 		http.Error(w, err.Error(), http.StatusInternalServerError)
-		return
 	}
-	t.Execute(w, nil)
-}
-
-func Home(w http.ResponseWriter, r *http.Request) {
-	RenderTemplate(w, "home")
-	if r.URL.Path != "/" {
-		http.Error(w, "404 not found.", http.StatusNotFound)
-		return
-	}
-	switch r.Method {
-	case "POST":
-		// Call ParseForm() to parse the raw query and update r.PostForm and r.Form.
-		if err := r.ParseForm(); err != nil {
-			fmt.Fprintf(w, "ParseForm() err: %v", err)
-			return
-		}
-		fmt.Fprintf(w, "Post from website! r.PostFrom = %v\n", r.PostForm)
-		name := r.FormValue("name")
-		address := r.FormValue("address")
-		fmt.Fprintf(w, "Name = %s\n", name)
-		fmt.Fprintf(w, "Address = %s\n", address)
-	default:
-		fmt.Fprintf(w, "Sorry, only GET and POST methods are supported.")
-	}
+	name := r.FormValue("name")
+	address := r.FormValue("address")
+	fmt.Fprintf(w, "%s %s", name, address)
 }
 
 func Jouer(w http.ResponseWriter, r *http.Request) {
-	RenderTemplate(w, "jouer")
 }
Index: hangman-web/main.go
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main\r\n\r\nimport (\r\n\t\"net/http\"\r\n)\r\n\r\nconst port = \":8080\"\r\n\r\nfunc main() {\r\n\thttp.HandleFunc(\"/\", Home)\r\n\thttp.HandleFunc(\"/contact\", Contact)\r\n\thttp.HandleFunc(\"/jouer\", Jouer)\r\n\r\n\t//http.Handle(\"/Templates/\", http.StripPrefix(\"/Templates/\", http.FileServer(http.Dir(\"Templates\"))))\r\n\thttp.Handle(\"/Assets/\", http.StripPrefix(\"/Assets/\", http.FileServer(http.Dir(\"Assets\"))))\r\n\r\n\thttp.ListenAndServe(port, nil)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hangman-web/main.go b/hangman-web/main.go
--- a/hangman-web/main.go	(revision f0c69eceb290a93862d10d7982b76fac1913fb13)
+++ b/hangman-web/main.go	(date 1670588299949)
@@ -11,7 +11,6 @@
 	http.HandleFunc("/contact", Contact)
 	http.HandleFunc("/jouer", Jouer)
 
-	//http.Handle("/Templates/", http.StripPrefix("/Templates/", http.FileServer(http.Dir("Templates"))))
 	http.Handle("/Assets/", http.StripPrefix("/Assets/", http.FileServer(http.Dir("Assets"))))
 
 	http.ListenAndServe(port, nil)
Index: hangman-web/Templates/home.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <link rel=\"stylesheet\" href=\"/Assets/style.css\" type=\"text/css\"/>\r\n\r\n    <title>HANGMAN-WEB</title>\r\n</head>\r\n\r\n<body>\r\n<p class=\"haut\"><img src=\"../Assets/hangman.jpg\" alt=\"Photo du HANGMAN\" /></p>\r\n<a class=\"button\"  href=\"/jouer\" title=\"Vous ne le regretterez pas\"><strong>JOUER</strong></a>\r\n<a class=\"button2\"  href=\"Règle.html\" title=\"Apprendre à jouer\"><strong>Règle</strong></a>\r\n<div >\r\n    <form method=\"POST\" action=\"/\">\r\n        <label>Name</label><input name=\"name\" type=\"text\" value=\"\" />\r\n        <label>Address</label><input name=\"address\" type=\"text\" value=\"\" />\r\n        <input type=\"submit\" value=\"submit\" />\r\n    </form>\r\n</div>\r\n\r\n</body>\r\n\r\n</html>\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hangman-web/Templates/home.html b/hangman-web/Templates/home.html
--- a/hangman-web/Templates/home.html	(revision f0c69eceb290a93862d10d7982b76fac1913fb13)
+++ b/hangman-web/Templates/home.html	(date 1670588299958)
@@ -9,8 +9,8 @@
 
 <body>
 <p class="haut"><img src="../Assets/hangman.jpg" alt="Photo du HANGMAN" /></p>
-<a class="button"  href="/jouer" title="Vous ne le regretterez pas"><strong>JOUER</strong></a>
-<a class="button2"  href="Règle.html" title="Apprendre à jouer"><strong>Règle</strong></a>
+<a class="buttonjouer"  href="/jouer" title="Vous ne le regretterez pas"><strong>JOUER</strong></a>
+<a class="buttonregle"  href="Règle.html" title="Apprendre à jouer"><strong>Règle</strong></a>
 <div >
     <form method="POST" action="/">
         <label>Name</label><input name="name" type="text" value="" />
@@ -18,7 +18,8 @@
         <input type="submit" value="submit" />
     </form>
 </div>
-
+<p>{{ .Name }}</p>
+<p>{{ .Address }}</p>
 </body>
 
 </html>
Index: hangman-web/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CommitMessageInspectionProfile\">\r\n    <profile version=\"1.0\">\r\n      <inspection_tool class=\"CommitFormat\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\" />\r\n      <inspection_tool class=\"CommitNamingConvention\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\" />\r\n    </profile>\r\n  </component>\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$/..\" vcs=\"Git\" />\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hangman-web/.idea/vcs.xml b/hangman-web/.idea/vcs.xml
--- a/hangman-web/.idea/vcs.xml	(revision f0c69eceb290a93862d10d7982b76fac1913fb13)
+++ b/hangman-web/.idea/vcs.xml	(date 1670588299963)
@@ -8,6 +8,5 @@
   </component>
   <component name="VcsDirectoryMappings">
     <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: hangman-web/Assets/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>body{\r\n    background-color: black;\r\n}\r\n\r\n.buttonjouer{\r\n    border: none;\r\n    background-color:rgb(9, 126, 236) ;\r\n    color: white;\r\n    padding: 15px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    border-radius: 2rem;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.image {\r\n    text-align: center;\r\n    font-size: 10vw;\r\n    margin-top: 20px;\r\n    color: white;\r\n}\r\n\r\n.buttonregle{\r\n    border: none;\r\n    background-color:rgb(9, 126, 236) ;\r\n    color: white;\r\n    padding: 15px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n    margin: 4px 2px;\r\n    border-radius: 2rem;\r\n    position: absolute;\r\n    top: 0%;\r\n    left: 0%;\r\n}\r\n\r\n.test {\r\n    text-align: center;\r\n    color: aqua;\r\n}\r\n\r\n.input{\r\n    text-align: center;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hangman-web/Assets/style.css b/hangman-web/Assets/style.css
--- a/hangman-web/Assets/style.css	(revision f0c69eceb290a93862d10d7982b76fac1913fb13)
+++ b/hangman-web/Assets/style.css	(date 1670588299970)
@@ -1,5 +1,5 @@
 body{
-    background-color: black;
+    background-color: white;
 }
 
 .buttonjouer{
